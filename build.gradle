plugins {
	id 'fabric-loom' version '0.9.9'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

version = project.mod_version
group = project.maven_group
archivesBaseName = "${project.mod_name}-${project.minecraft_version}-${project.mod_version}"

repositories {
	mavenCentral()
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"


	// Needed libraries
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}" // Mod Menu mod integration
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	modImplementation "org.json:json:${project.json_version}"
	include "org.json:json:${project.json_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	//def targetVersion = 8
	def targetVersion = 16
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	repositories {

	}
}
